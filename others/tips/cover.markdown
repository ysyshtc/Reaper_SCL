小知识

设正整数$n$的质因数分解为$n=\prod p_i^{a_i}$，则$x^2+y^2=n$有整数解的充要条件是$n$中不存在形如$p_i \equiv 3\pmod{4}$且指数$a_i$为奇数的质因数$p_i$。

Pick定理：简单多边形，不自交。则：$\frac{(\mbox{严格在多边形内部的整点数}\times 2+\mbox{在边上的整点数}-2)}{2}=\mbox{面积}$。

定理1：最小覆盖数=最大匹配数

定理2：最大独立集$S$与最小覆盖集$T$互补。

算法：

1.做最大匹配，没有匹配的空闲点$\in S$；

2.如果$u\in S$那么$u$的临点必然属于$T$；

3.如果一对匹配的点中有一个属于$T$那么另外一个属于$S$；

4.还不能确定的，把左子图的放入$S$，右子图放入$T$；

算法结束。
 
$p$是素数且$2^p-1$的数是素数，$n$不超过$258$的全部梅森素数终于确定，为
$n=2,3,5,7,13,17,31,61,89,107,127$。
 
有上下界网络流，求可行流部分，增广的流量不是实际流量。若要求实际流量应该强算一遍源点出去的流量。

求最小下届网络流：

方法一：加$t\to s$的无穷大流，求可行流，然后把边反向后(减去下届网络流)，在残留网络中从汇到源做最大流。

方法二：在求可行流的时候，不加从汇到源的无穷大边，得到最大流$X$，加上从汇到源无穷大边后，再求最大流得到$Y$。
那么$Y$即是答案最小下届网络流。

原因：感觉上是在第一遍已经把内部都消耗光了，第二遍是必须的流量。
 
序列差分表由它的第$0$行确定，也就是原序列，但同时也可以由第$0$条对角线上的元素确定。

换句话说，由差分表的第$0$条对角线就可以确定原序列。有这样两个公式：

原序列为$h_i$，第$0$条对角线为$c_0,c_1,\ldots,c_p,0,0,\ldots$。
则$h_n=c_0*\binom{n}{0}+c_1\binom{n}{1}+\ldots+c_p\binom{n}{p}$，
$\sum_{k=0}^{n}=c_0\binom{n+1}{1}+c_2\binom{n+1}{2}+\ldots+c_p\binom{n+1}{p+1}$。

记住这两个公式，差分表(的第$0$条对角线)就变得非常有用了。
 
平面图一定存在一个度小于等于$5$的点，且可以四染色。

欧拉公式：设$G$是连通的平面图，$n,m,r$分别是其顶点数、边数和面数，则$n-m+r=2$。

极大平面图：$m\le3n-6$。
 
$\gcd(2^a-1,2^b-1)=2^{\gcd(a,b)}-1$。

Fibonacci数：$\gcd(F_n,F_m)=F_{\gcd(n,m)}$(牛书，P228)。
即是说，两个Fibonacci数的最大公约数，肯定是个Fibonacci数。
 
Fibonacci质数(和前面所有的Fibonacci数互质)(大多已经是质数了，可能有BUG吧，不确定)

定理：如果$a$是$b$的倍数，那么$F_a$是$F_b$的倍数。
 
平方数的和是平方数的问题。

\begin{verbatim}
    a[0] := 0;
    s := 0;
    for i := 1 to n - 2 do
        begin
            a[i] := a[i - 1] + 1;
            s := s + sqr(a[i]);
        end;
    {======s + sqr(a[n-1]) + sqr(a[n]) = k^2=======}
    a[n - 1] := a[n - 2];
    repeat
        a[n - 1] := a[n - 1] + 1;
    until odd(s + sqr(a[n - 1])) and (a[n - 1] > 2);
    a[n] := (s + sqr(a[n - 1]) - 1) shr 1;
\end{verbatim}

知道\texttt{s}和\texttt{a[n-1]}后，直接求了\texttt{a[n]}。神奇了点。

其实。有当$n$为奇数：$n^2+{\lfloor\frac{n^2-1}{2}\rfloor}^2={\lfloor\frac{n^2+1}{2}\rfloor}^2$

若：

$a=k\cdot(s^2 - t^2)$

$b=2\cdot k\cdot s\cdot t$

$c=k\cdot(s^2 + t^2)$

则$c^2=a^2+b^2$。
 
定义：一颗树$T$的质心$m$，就是将$m$及$m$连出的边都删除之后，剩下的森林中，每颗树的节点数$\le \frac{|V(T)|}{2}$。任何树都有质心，并且可以在$O(N)$的时间内求出。

求的方法如下：以任意一个节点作为$T$的根，作后序遍历。对于节点$v$，若是叶子节点，令$C(v)=1$，否则$C(v)=$子树和。
遍历过程中，第一次出现$C(v)\ge\frac{|V(T)|}{2}$，那么$v$就是质心。

质心是个好东西，也许以后对不是二叉树的树进行分治之类的算法，考虑强行把令质心作为根，可以得到二分法一样的时间复杂度。
 
重加权的方法如下：增加人工结点$s$，直接到所有点连一条弧，权均为0，然
后以$s$为起点运行bellman-ford，求出$dist(v)$。如果有负权圈则退出，否则对于原图
中的每个条边$(u,v)$，设新权$w'(u,v)=dist(u)+w(u,v)-dist(v)$，则它是非负的。
 
$k-$连通(\emph{k-connected})：对于任意一对结点都至少存在结点各不相同的$k$条
路。

点连通度(\emph{vertex connectivity})：把图变成非连通图所需删除的最少点
数。

这两个定义是互通的，因为我们有：
Whitney定理：一个图是$k-$连通的当且仅当它的点连通度至少为$k$。
 
Fermat分解算法从$t=\sqrt{n}$开始，依次检查$t^2-n,(t+1)^2-n,(t+2)^2-n,\ldots$，直到
出现一个平方数$y$，由于$t^2-y^2=n$，因此分解得$n=(t-y)(t+y)$。显然，当两个因数很
接近时这个方法能很快找到结果，但如果遇到一个素数，则需要检查$\frac{n+ 1}{2}-\sqrt{n}$个
整数，比试除法还慢得多。虽然方法并不是很有效，但是为我们提供了一个思路。

\textbf{双人零和游戏}\\
$N \times N$的方阵$A$, 选行的玩家的最优策略是$p$, 选列的是$q$, 则
\[ q = A^{-1} \times e / (e^T \times A^{-1} \times e) \]
\[ p^T = e^T \times A^{-1} / (e^T \times A^{-1} \times e)\]
其中$e$是全为$1$的列向量.\\
当$A$不可逆时, 每个元素加上一个值就可以了.

当矩阵是$m$行, $n$列的时候
\[p_1 + p_2 + \cdots + p_m = 1, p_i \le 0, V \le \sum p_i \times A_{i, j}\]
最大化$V$即可

